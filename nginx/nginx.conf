user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # Performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 20M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript 
               application/json application/javascript application/xml+rss 
               application/rss+xml application/atom+xml image/svg+xml;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=api:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=2r/s;

    # Cache settings
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=static_cache:10m max_size=1g 
                     inactive=60m use_temp_path=off;

    # Upstream configuration
    upstream speedmonitor_app {
        least_conn;
        server app:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream grafana {
        server grafana:3000;
        keepalive 16;
    }

    upstream prometheus {
        server prometheus:9090;
        keepalive 16;
    }

    # Redirect HTTP to HTTPS
    server {
        listen 80;
        server_name _;
        return 301 https://$host$request_uri;
    }

    # Main HTTPS server
    server {
        listen 443 ssl http2;
        server_name speedmonitor.nubem.dev;

        # SSL configuration
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_stapling on;
        ssl_stapling_verify on;

        # Root directory for static files
        root /usr/share/nginx/html;
        index index.html;

        # Static assets with CDN headers
        location /static/ {
            alias /usr/share/nginx/html/static/;
            
            # Cache headers
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Cache-Status $upstream_cache_status;
            
            # CORS for CDN
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, OPTIONS";
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range";
            
            # Enable gzip
            gzip_static on;
            
            # Serve pre-compressed files if they exist
            location ~ \\.gz$ {
                add_header Content-Encoding gzip;
                gzip off;
            }
        }

        # Images with optimization
        location /images/ {
            alias /usr/share/nginx/html/images/;
            expires 30d;
            add_header Cache-Control "public, no-transform";
            add_header X-Cache-Status $upstream_cache_status;
            
            # Image optimization headers
            add_header Vary Accept;
            
            # Serve WebP if supported
            location ~ \\.(png|jpg|jpeg)$ {
                set $webp_suffix "";
                if ($http_accept ~* "webp") {
                    set $webp_suffix ".webp";
                }
                try_files $uri$webp_suffix $uri =404;
            }
        }

        # Health check endpoint (no auth, no rate limit)
        location = /health {
            proxy_pass http://speedmonitor_app;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            access_log off;
        }

        # Metrics endpoint (rate limited)
        location = /metrics {
            limit_req zone=api burst=5 nodelay;
            proxy_pass http://speedmonitor_app;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # API endpoints
        location /api/ {
            limit_req zone=api burst=10 nodelay;
            
            proxy_pass http://speedmonitor_app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 10s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Disable buffering for SSE
            proxy_buffering off;
            proxy_cache off;
        }

        # Auth endpoints (strict rate limit)
        location /auth/ {
            limit_req zone=auth burst=5 nodelay;
            
            proxy_pass http://speedmonitor_app;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Grafana proxy
        location /grafana/ {
            rewrite ^/grafana/(.*) /$1 break;
            proxy_pass http://grafana;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Prometheus proxy (admin only)
        location /prometheus/ {
            rewrite ^/prometheus/(.*) /$1 break;
            proxy_pass http://prometheus;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Basic auth for Prometheus
            auth_basic "Prometheus Admin";
            auth_basic_user_file /etc/nginx/.htpasswd;
        }

        # Root path
        location / {
            try_files $uri $uri/ /index.html;
            
            # Security headers for HTML
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-XSS-Protection "1; mode=block" always;
        }

        # Deny access to hidden files
        location ~ /\\. {
            deny all;
            access_log off;
            log_not_found off;
        }
    }

    # Status page for monitoring
    server {
        listen 8080;
        server_name localhost;
        
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 172.16.0.0/12;
            deny all;
        }
    }
}